"""Project Euler: Problems 1-10"""
from euler import prime


def problem_one(n):
    """
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
    """
    sum = 0
    for i in range(1, n):
        if i % 3 == 0 or i % 5 == 0:
            sum += i
    return sum


def problem_two(n):
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """
    a = 1
    b = 2
    sum = 0
    while b < n:
        if b % 2 == 0:
            sum += b
        b += a
        a = b - a
    return sum


def problem_three(n):
    """
    The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143?
    """
    output = prime.prime_factors(n)
    return output[-1]


if __name__ == "__main__":
    three = problem_three(600851475143)
    print(f"Number: {three}")
